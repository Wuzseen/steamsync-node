{"version":3,"sources":["../src/simpletable.jsx"],"names":[],"mappings":"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","file":"simpletable.js","sourcesContent":["//import classNames from 'classnames';\r\n//import SidebarMixin from 'global/jsx/sidebar_component';\r\n\r\n//import Header from 'common/header';\r\n//import Sidebar from 'common/sidebar';\r\n//import Footer from 'common/footer';\r\n\r\n//  <SimpleTable url pollInterval/>\r\n//      <SimpleTableBody/>\r\n//          <ButtonAdd/>\r\n//          <AddFormModal/>\r\n//          <SimpleTableHead/>\r\n//          <SimpleTableRow/>\r\n//              <ButtonDelete/>\r\n\r\n\r\nvar ButtonAdd = React.createClass({\r\n    onClick: function() {\r\n        this.props.onClick();\r\n    },\r\n    onTouchEnd: function() {\r\n        this.props.onTouchEnd();\r\n    },\r\n    render() {\r\n        return <Button\r\n            bsStyle='info'\r\n            onClick={this.onClick}\r\n            onTouchEnd={this.onTouchEnd}\r\n        >Add New Entry</Button>\r\n    }\r\n})\r\n\r\nvar SimpleTableBody = React.createClass({\r\n    loadFromServer: function(page) {\r\n        var urloptions = '&page=' + page ;\r\n        if (this.props.urloptions) {\r\n            urloptions = urloptions + '&' + this.props.urloptions;\r\n        }\r\n        $.ajax({\r\n            url: this.props.url + '?method=get' + urloptions,\r\n            dataType: 'json',\r\n            cache: false,\r\n            success: function(data) {\r\n                this.setState({data: data});\r\n            }.bind(this),\r\n            error: function(xhr, status, err) {\r\n                if (err.toString() == \"Unauthorized\") {\r\n                    this.onUnauthorized(false);\r\n                }\r\n                console.error(this.props.url, status, err.toString());\r\n            }.bind(this)\r\n        });\r\n    },\r\n    onUpdate: function(val){\r\n        var newdata = this.state.data;\r\n        delete newdata.values[val.id];\r\n        this.setState({\r\n            data: newdata\r\n           });\r\n    },\r\n    getInitialState: function() {\r\n        return {data: {\"columns\":[], \"values\":[], \"authorized\": true, \"totals\": []}};\r\n    },\r\n    componentDidMount: function() {\r\n        this.loadFromServer(0);\r\n        this.refreshInterval = setInterval(this.loadFromServer, this.props.pollInterval);\r\n    },\r\n    componentWillUnmount: function() {\r\n        clearInterval(this.refreshInterval);\r\n    },\r\n    onFormSubmit: function(val) {\r\n        var newdata = this.state.data;\r\n        newdata.values.push(val.data);\r\n        this.setState({\r\n            data: newdata\r\n        });\r\n    },\r\n    onUnauthorized: function(val){\r\n        window.location = \"login\";\r\n    },\r\n    handlePaginatorClick: function(page) {\r\n        this.loadFromServer(page);\r\n    },\r\n    getLargeModal() {\r\n        return (\r\n            <AddFormModal columns={this.state.data.columns} onFormSubmit={this.onFormSubmit} url={this.props.url}/>\r\n        );\r\n    },\r\n    render: function() {\r\n\r\n        var url = this.props.url;\r\n        var urloptions = this.props.urloptions;\r\n\r\n        var idcol = null;\r\n        for (var key in this.state.data.columns) {\r\n            var row = this.state.data.columns[key];\r\n            if (row.type == 'primary') {\r\n                idcol = row.name;\r\n            }\r\n        };\r\n        var buttonAdd = '';\r\n        if (this.props.addButton == \"true\") {\r\n            buttonAdd = <ButtonAdd onClick={ModalManager.create.bind(this, this.getLargeModal())} onTouchEnd={ModalManager.create.bind(this, this.getLargeModal())}/>;\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {buttonAdd}\r\n                <Table id={this.props.tableid} className='display' cellSpacing='0' width='100%'>\r\n                    <SimpleTableHead columns={this.state.data.columns}/>\r\n                    <tbody>\r\n                    {\r\n                        this.state.data.values.map(function (object, i) {\r\n                            return (\r\n                                <SimpleTableRow\r\n                                    key={i}\r\n                                    row={object}\r\n                                    id={i}\r\n                                    data={this.state.data}\r\n                                    idcol={idcol}\r\n                                    url={this.props.url}\r\n                                    urloptions={this.props.urloptions}\r\n                                    onUpdate={this.onUpdate}/>\r\n                            )\r\n                        }, this)\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                <Paginator totals={this.state.data.totals} onClick={this.handlePaginatorClick}  />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nvar SimpleTableHead = React.createClass({\r\n    render: function() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {\r\n                        this.props.columns.map(function(cols, i) {\r\n\r\n                            if (cols.hidden == true) {\r\n                                return\r\n                            }\r\n\r\n                            return <th key={i}>{cols.label}</th>\r\n                        })\r\n                    }\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n});\r\n\r\nvar SimpleTableRow = React.createClass({\r\n    renderEditable: function() {\r\n        $('.xeditable').editable({\r\n            mode: 'popup',\r\n            type: 'text',\r\n            url: this.props.url + '?method=update',\r\n            success: this.editSuccess\r\n        });\r\n        $('.xeditable_boolean').editable({\r\n            mode: 'popup',\r\n            type: 'text',\r\n            url: this.props.url + '?method=update',\r\n            source: [\r\n                {value: 1, text: 'Enabled'},\r\n                {value: 0, text: 'Disabled'}\r\n            ],\r\n            success: this.editSuccess\r\n        });\r\n        $('.xeditable_select').editable({\r\n            mode: 'popup',\r\n            type: 'text',\r\n            url: this.props.url + '?method=update',\r\n            source: this.selectSrc(this.current_col),\r\n            success: this.editSuccess\r\n        });\r\n    },\r\n    componentDidMount: function() {\r\n        this.renderEditable();\r\n    },\r\n    onUpdate: function(val){\r\n        this.props.onUpdate(val);\r\n    },\r\n    editSuccess: function(response, newValue) {\r\n        if(response.result != 0)\r\n        {\r\n            if (response.msg == null) {\r\n                return \"Undefined error\";\r\n            } else {\r\n                return response.msg;\r\n            }\r\n        }\r\n    },\r\n    selectSrc: function(val) {\r\n        if (typeof val == 'undefined') {\r\n            return false;\r\n        }\r\n        var src = [];\r\n        for (var ind in val.values) {\r\n            src.push({\r\n                value: ind,\r\n                text: val.values[ind]\r\n            });\r\n        };\r\n        return src;\r\n    },\r\n    render: function() {\r\n //       var tableRow = this.props.row;\r\n //       var colTypes = this.props.coltypes;\r\n //       var colEditables = this.props.editables;\r\n //       var colNames = this.props.colnames;\r\n //       var rowArray = $.map(tableRow, function(value, index){\r\n //           return [value];\r\n //       });\r\n        var pk = this.props.row[this.props.idcol];\r\n\r\n        return (\r\n            <tr key={pk}>\r\n                {this.props.data.columns.map(function(col, index) {\r\n                    var name = col.name;\r\n                    if (col.hidden == true) {\r\n                        return\r\n                    }\r\n                    if (col.type == 'subtable') {\r\n                        var qs = this.props.idcol + '=' + pk;\r\n                        return (\r\n                            <td key={index}>\r\n                                <ButtonSubtable onUpdate={this.onUpdate} pk={pk} url={this.props.url} id={this.props.id} dataurl={col.url} qs={qs} title={col.label}/>\r\n                            </td>)\r\n                    } else if (col.type == 'button_delete') {\r\n                        return <td key={index}><ButtonDelete onUpdate={this.onUpdate} pk={pk} url={this.props.url} id={this.props.id}/></td>\r\n                    } else {\r\n                        if (col.editable){\r\n                            if(col.type == 'boolean') {\r\n                                return <td key={index}>\r\n                                    <a href=\"#\" key={index}\r\n                                       className=\"xeditable_boolean\"\r\n                                       data-type=\"select\"\r\n                                       data-title={col.label}\r\n                                       data-pk={pk}\r\n                                       data-name={col.name}\r\n                                       data-value={this.props.row[col.name]}\r\n                                    >{(this.props.row[col.name] == 1) ? 'Enabled' : 'Disabled'}</a></td>\r\n                            } else if (col.type == 'select') {\r\n                                this.current_col = col;\r\n                                return <td key={index} className={(index === 0) ? 'text-left' : ''}>\r\n                                    <a href='#' key={index}\r\n                                       className='xeditable_select'\r\n                                       data-type='select'\r\n                                       data-title={col.label}\r\n                                       data-pk={pk}\r\n                                       data-name={col.name}\r\n                                       data-value={this.props.row[col.name]}\r\n                                    >{col.values[this.props.row[col.name]]}</a>\r\n                                </td>\r\n                            } else {  // string\r\n                                return <td key={index} className={(index === 0) ? 'text-left' : ''}>\r\n                                    <a href='#' key={index}\r\n                                       className='xeditable'\r\n                                       data-type='text'\r\n                                       data-title={col.label}\r\n                                       data-pk={pk}\r\n                                       data-name={col.name}\r\n                                    >{this.props.row[col.name]}</a>\r\n                                </td>\r\n                            }\r\n                        }\r\n                        return <td key={index}>{this.props.row[col.name]}</td>\r\n                    }\r\n                }, this)}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n})\r\n\r\n\r\nvar SubtableModal = React.createClass ({\r\n    render() {\r\n        return (\r\n            <Modal>\r\n                <ModalHeader>\r\n                    <Button onClick={ModalManager.remove} onTouchEnd={ModalManager.remove} close />\r\n                    <h4 className='modal-title'>{this.props.title}</h4>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <SimpleTable url={this.props.dataurl} urloptions={this.props.qs}/>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n})\r\n\r\nvar ButtonSubtable = React.createClass({\r\n    getSubtableModal() {\r\n        return (\r\n            <SubtableModal dataurl={this.props.dataurl} qs={this.props.qs} title={this.props.title}/>\r\n        );\r\n    },\r\n    render() {\r\n        return  <Button bsStyle='small outlined default' onClick={ModalManager.create.bind(this, this.getSubtableModal())} onTouchEnd={ModalManager.create.bind(this, this.getSubtableModal())} >Show</Button>\r\n    }\r\n})\r\n\r\nvar ButtonDelete = React.createClass({\r\n    handleDelete: function() {\r\n        if(confirm(\"Are you sure?\")) {\r\n            $.ajax({\r\n                url: this.props.url + '?method=remove',\r\n                method: 'POST',\r\n                data: {\"pk\": this.props.pk, \"id\": this.props.id},\r\n                dataType: 'json',\r\n                cache: false,\r\n                success: function (data) {\r\n                    this.props.onUpdate(data);\r\n                }.bind(this),\r\n                error: function (xhr, status, err) {\r\n                    console.error(this.props.url, status, err.toString());\r\n                }.bind(this)\r\n            });\r\n        }\r\n    },\r\n    render() {\r\n        return <Button bsStyle='danger' onClick={this.handleDelete}>Delete</Button>\r\n    }\r\n})\r\n\r\nvar AddFormModal = React.createClass({\r\n    getInitialState: function() {\r\n        var startstate = [];\r\n        this.props.columns.map(function(cols, i) {\r\n            if(\"default\" in cols) {\r\n                startstate[cols.name] = cols.default;\r\n            }\r\n        })\r\n        return { fields: startstate, error_fields: [], error_message: null};\r\n    },\r\n\r\n    onCancel: function() {\r\n        var newstate = [];\r\n        this.props.columns.map(function(cols, i) {\r\n            if(\"default\" in cols) {\r\n                newstate[cols.name] = cols.default;\r\n            }\r\n        })\r\n        this.setState({fields: newstate});\r\n        ModalManager.remove();\r\n    },\r\n    changeField: function(name, e) {\r\n        var change = this.state.fields;\r\n        change[name] = e.target.value;\r\n        this.setState({fields: change});\r\n    },\r\n    handleSubmit: function(e) {\r\n        e.preventDefault();\r\n        var data = {};\r\n        for (var i in this.state.fields) {\r\n            data[i] = this.state.fields[i];\r\n        }\r\n        $.ajax({\r\n            url: this.props.url + '?method=create',\r\n            dataType: 'json',\r\n            method: 'POST',\r\n            data: data,\r\n            success: function(data) {\r\n                this.handleServerResponse(data);\r\n            }.bind(this),\r\n            error: function(xhr, status, err) {\r\n                console.error(this.props.url, status, err.toString());\r\n            }.bind(this)\r\n        });\r\n    },\r\n    handleServerResponse: function(data) {\r\n        if (data.result == 0) {\r\n            // update state and close\r\n           this.props.onFormSubmit(data);\r\n            ModalManager.remove();\r\n        } else {\r\n            this.setState({\r\n                error_fields: data.fields,\r\n                error_message: data.msg\r\n            });\r\n        }\r\n    },\r\n    render() {\r\n        var alertMessage = '';\r\n        if (this.state.error_message) {\r\n            alertMessage = <Alert danger collapseBottom>{this.state.error_message}</Alert>\r\n        }\r\n        return (\r\n            <Modal lg>\r\n                <ModalHeader>\r\n                    <Button onClick={ModalManager.remove} onTouchEnd={ModalManager.remove} close />\r\n                    <h4 className='modal-title'>Add New Entry</h4>\r\n                    {alertMessage}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form horizontal >\r\n                        {\r\n                            this.props.columns.map(function(cols, i) {\r\n                                var labelClass = \"\";\r\n                                if (typeof this.state.error_fields !== 'undefined' && this.state.error_fields.length > 0) {\r\n                                    if ( this.state.error_fields.indexOf(cols.name) > -1 ) {\r\n                                        var labelClass = \"has-error\";\r\n                                    }\r\n                                }\r\n\r\n                                if (cols.type=='select')\r\n                                {\r\n                                    var rows = [];\r\n                                    for (var i in cols.values) {\r\n                                        rows.push(<option value={i} key={i}>{cols.values[i]}</option>);\r\n                                    }\r\n                                    return (\r\n                                        <FormGroup key={i} className={labelClass}>\r\n                                            <Label control sm={3} htmlFor='blockhelp' >{cols.label}</Label>\r\n                                            <Col sm={9}>\r\n                                                <Select\r\n                                                    value={this.props.value}\r\n                                                    defaultValue={this.props.default}\r\n                                                    onChange={this.changeField.bind(this, cols.name)}>{rows}</Select>\r\n                                            </Col>\r\n                                        </FormGroup> )\r\n                                } else if( cols.type == \"text\" ) {\r\n                                     return (\r\n                                        <FormGroup key={i} className={labelClass}>\r\n                                            <Label control sm={3} htmlFor='blockhelp' >{cols.label}</Label>\r\n                                            <Col sm={9}>\r\n                                                <Input\r\n                                                    type='text'\r\n                                                    id='blockhelp'\r\n                                                    placeholder={cols.label}\r\n                                                    defaultValue={cols.default}\r\n                                                    value={this.state.fields[cols.name]}\r\n                                                    onChange={this.changeField.bind(this, cols.name)}/>\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                     )\r\n                                } else if (cols.type == \"boolean\") {\r\n                                      return (\r\n                                          <FormGroup key={i} className={labelClass}>\r\n                                                <Label control sm={3} htmlFor='blockhelp' >{cols.label}</Label>\r\n                                                <Col sm={9}>\r\n                                                    <Checkbox\r\n                                                        value='1'\r\n                                                        name='horizontal-checkbox-options'\r\n                                                        onChange={this.changeField.bind(this, cols.name)}/>\r\n                                                </Col>\r\n                                          </FormGroup>\r\n                                      )\r\n                                }\r\n                            }, this)\r\n                        }\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button outlined bsStyle='danger' onClick={this.onCancel}>cancel</Button>{' '}\r\n                    <Button outlined bsStyle='lightblue' onClick={this.handleSubmit} type='submit' >submit</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n})\r\n\r\nvar Paginator = React.createClass({\r\n    onClick: function(i, e){\r\n        e.preventDefault();\r\n        this.props.onClick(i);\r\n    },\r\n    render() {\r\n        if (this.props.totals == undefined) {\r\n            return <div></div>;\r\n        }\r\n        var maxrows = this.props.totals.maxrows;\r\n        var numpages = Math.ceil(this.props.totals.count / maxrows);\r\n        var first = this.props.totals.page * maxrows + 1;\r\n        var last = Math.min(first + maxrows  - 1, this.props.totals.count);\r\n        var pages = [];\r\n\r\n        if (this.props.totals.page == 0) {\r\n            pages.push(<Page key='0-0' begin disabled onClick={this.onClick.bind(this,0)} />);\r\n        } else {\r\n            pages.push(<Page key='0-0' begin onClick={this.onClick.bind(this,0)}/>);\r\n        }\r\n\r\n        for (var i=0; i < numpages; i++) {\r\n            if (this.props.totals.page == i) {\r\n                pages.push(<Page key={i} active onClick={this.onClick.bind(this,i)}>{i+1}</Page>);\r\n            } else {\r\n                pages.push(<Page key={i} onClick={this.onClick.bind(this,i)}>{i+1}</Page>);\r\n            }\r\n        }\r\n        if (this.props.totals.page == numpages-1) {\r\n            pages.push(<Page key={numpages} end disabled onClick={this.onClick.bind(this,numpages-1)}/>);\r\n        } else {\r\n            pages.push(<Page key={numpages} end onClick={this.onClick.bind(this,numpages-1)}/>);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>Showing {first} to {last} of {this.props.totals.count} entries</div>\r\n                <Pagination>\r\n                    {pages}\r\n                </Pagination>\r\n            </div>\r\n        )\r\n    }\r\n\r\n})\r\n\r\nexport default class SimpleTable extends React.Component {\r\n    render(){\r\n        return (\r\n            <SimpleTableBody\r\n                tableid = {this.props.tableid}\r\n                url={this.props.url}\r\n                pollInterval={this.props.pollInterval}\r\n                urloptions={this.props.urloptions}\r\n                addButton={this.props.addButton}\r\n            />\r\n        );\r\n    }\r\n}"]}